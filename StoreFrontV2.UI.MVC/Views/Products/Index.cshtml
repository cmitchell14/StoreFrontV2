@*@model IEnumerable<StoreFrontV2.DATA.EF.Product>*@
@model PagedList.IPagedList<StoreFrontV2.DATA.EF.Product>
@using PagedList.Mvc

@{
    ViewBag.Title = "Shop Our Products";
}



<div class="page-title-section wf-section">
    <div class="container">
        <h1 class="page-title">@ViewBag.Title</h1>
    </div>
</div>
<div class="content-section featured-section wf-section">
    <div class="container">
        <div class="w-dyn-list">
            <div role="list" class="w-dyn-items">
                <div role="listitem" class="w-dyn-item">
                    <a href="#" class="featured-wrapper w-inline-block">
                        <div class="feature-text-wrapper">
                        </div>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>
@if (User.IsInRole("Admin"))
{
    <div class="shop-button-wrapper">
        <a href="@Url.Action("Create", "Products")" class="btn" id="adminButton">
            Create New Product
        </a>
    </div>
}



<div class="content-section wf-section">
    <div class="container">
        <div class="shop-page-wrapper" id="ProductDiv">
            <div class="row">

            </div>
            <div class="shop-category-menu">
                <h2 class="category-menu-heading w-richtext-align-center">Shop by Category</h2>
                <div class="w-dyn-list">
                    <div role="list" class="w-dyn-items">
                        @using (Html.BeginForm("Index", "Products", FormMethod.Get))
                        {
                            <div role="listitem" class="category-menu-item w-dyn-item">
                                @Html.DropDownList("CategoryFilter", null, "Select a Category", new { @class = "form-control" })
                            </div>
                            <div>
                                <input style="padding-top:5px" type="submit" value="Category" class="btn btn-primary" />
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="shop-list">
                <div>
                    @using (Html.BeginForm("Index", "Products", FormMethod.Get))
                    {
                        <p style="text-align:right">
                            Search Products: @Html.TextBox("SearchString", ViewBag.SearchString as string)
                            <input type="submit" value="Search" class="btn btn-primary" />
                        </p>
                    }
                </div>
                <br />
                <div class="products-list-wrapper w-dyn-list">
                    <div role="list" class="products-list w-dyn-items">

                        @if (Model.Count() > 0)
                        {
                            foreach (var item in Model)
                            {

                                <div role="listitem" class="w-dyn-item">

                                    <p id="centerText">@Html.DisplayFor(modelItem => item.ProductName)</p>
                                    <div class="shop-item-wrapper" id="Product-@item.ProductID">
                                        <a href="@Url.Action("Details", new { id = item.ProductID })" class="shop-item-link-wrapper w-inline-block">
                                            <div>
                                                <img src="~/Content/images/ProductImages/@item.ProdImage" alt="@item.ProductName photo" id="centerPhoto" />
                                            </div>
                                            <div>
                                                <br />
                                            </div>
                                            <div class="shop-details-wrapper">
                                                <div class="shop-details-left">
                                                    <div class="price-wrapper">
                                                        <div class="shop-item-price">@Html.DisplayFor(modelItem => item.UnitPrice)</div>
                                                    </div>
                                                </div>
                                            </div>
                                        </a>
                                        <div class="shop-button-wrapper">
                                            <a href="@Url.Action("Details", new { id = item.ProductID })" class="btn w-button">Details</a>
                                        </div>
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <div class="shop-button-wrapper">
                                                <a href="@Url.Action("Edit", new { id = item.ProductID })" class="btn" id="adminButton">Edit</a>
                                            </div>
                                            <div class="shop-button-wrapper">
                                                @*Replaced with AJAX*@
                                                <a href="@Url.Action("Delete", new { id = item.ProductID })" class="btn" id="adminButton">Delete</a>
                                                @*@Ajax.ActionLink("Delete", "AjaxDelete", "Products", new { id = item.ProductID },
                                                    new AjaxOptions
                                                    {
                                                        HttpMethod = "POST",
                                                        Confirm = "Are you sure you want to delete this product?",
                                                        OnSuccess = "deleteConfirmed",
                                                        OnFailure = "deleteFailed"
                                                    })*@
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p>No results were found for your search.  Please try again.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewBag.SearchString }))
    </div>
</div>

@section scripts{
    <script>
        //Script for AJAX delete functionality.
        function deleteConfirmed(response, status, data) {
            var divID = "#Product-" + response.id;
            $("ProductDiv").find(divID)


            $("#ProductDiv").html("<div class='alert alert-success'>" + response.message + "</div>");
        }
    </script>




}






@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitsInStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitsOnOrder)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProdImage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category.CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductStatu.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Supplier.SupplierName)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitsInStock)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitsOnOrder)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProdImage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductStatu.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Supplier.SupplierName)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ProductID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ProductID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ProductID })
                </td>
            </tr>
        }

    </table>*@
