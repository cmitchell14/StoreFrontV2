@*@model IEnumerable<StoreFrontV2.UI.MVC.Models.CartItemViewModel>*@
@model Dictionary<int, StoreFrontV2.UI.MVC.Models.CartItemViewModel>

@{
    ViewBag.Title = "Shopping Cart";
}





<div class="content-section why-acme-sections wf-section" id="shop-header">
    <div class="container">
        <div class="about-top-block">
            <div class="why-acme-block">
                <h2>@ViewBag.Title</h2>
                <br />
                <p style="text-decoration:none">
                    @Html.ActionLink("Back to Shop", "Index", "Products", null, new { @class = "btn btn-info", @id = "backToShop" })
                </p>
            </div>
        </div>
    </div>
    <br />
</div>

@{
    decimal? cartTotal = 0;
    int totalCountOfItems = 0;
}
<div class="content-section why-acme-sections wf-section">
    <div class="container">
        <div class="shop-columns-wrapper">

            @if (Model.Count == 0)
            {
                <p class="table">
                    There are no items in your cart.
                </p>
            }
            else
            {
                <table class="table">
                    <thead>
                        <tr class="cartTitles">
                            <th>

                            </th>
                            <th class="shop-column">
                                Product Name
                            </th>
                            <th class="shop-column">
                                Price
                            </th>
                            <th class="shop-column">
                                Quantity
                            </th>

                            <th class="shop-column" id="table-align-center">
                                Line Total
                            </th>
                            <th class="shop-column"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="shop-column">
                                    <img src="~/Content/images/ProductImages/t_@item.Value.Product.ProdImage" alt="Picture of @item.Value.Product.ProductName" title="@item.Value.Product.ProductName" />
                                </td>
                                <td class="shop-column smallName">
                                    @item.Value.Product.ProductName
                                </td>
                                <td class="shop-column smallName" id="table-align-center">
                                    @string.Format($"{item.Value.Product.UnitPrice:c}")
                                </td>
                                <td class="shop-column" id="table-align">
                                    @using (Html.BeginForm("UpdateCart", "ShoppingCart", FormMethod.Post))
                                    {
                                        @Html.Hidden("productID", item.Key)
                                        @Html.TextBox("qty", item.Value.Qty, new { @class = "form-control smallName", style = "max-width: 25px; display: inline;" })
                                        <input type="submit" value="&#8597;" class="btn btn-info smallShop" />
                                    }

                                    @{
                                        //Calculate the running total of items
                                        totalCountOfItems += item.Value.Qty;
                                    }
                                </td>

                                <td class="shop-column smallName" id="table-align-center">
                                    @{
                                        //Calculate line total & update running total variable
                                        decimal? lineTotal = item.Value.Qty * item.Value.Product.UnitPrice;
                                        cartTotal += lineTotal;
                                    }

                                    @string.Format($"{lineTotal:c}")
                                </td>
                                <td class="shop-column">
                                    <span>@Html.ActionLink("x", "RemoveFromCart", new { id = item.Key }, htmlAttributes: new { id = "remove-btn" })</span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <br />

            }
        </div>
    </div>

</div>
<div class="w-col-12 cartTotal">
    <p class="cartText">
        You have @totalCountOfItems item@(totalCountOfItems == 1 ? "" : "s") in your cart.
        Your total before taxes and shipping is: @string.Format($"{cartTotal:c}")
    </p>
</div>
